[{"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\index.js":"1","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\App.js":"2","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\AppRouter.js":"3","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\utils\\consts.js":"4","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Basket.jsx":"5","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Admin.jsx":"6","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Shop.jsx":"7","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Auth.jsx":"8","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\routes\\appRoutes.js":"9","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\DevicePage.jsx":"10","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\store\\UserStrore.js":"11","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\store\\DeviceStore.js":"12","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\NavBar.jsx":"13","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\TypeBar.jsx":"14","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\BrandBar.jsx":"15","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\DeviceList.jsx":"16","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\DeviceItem.jsx":"17","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\modals\\CreateType.jsx":"18","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\modals\\CreateBrand.jsx":"19","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\modals\\CreateDevice.jsx":"20","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\http\\userApi.js":"21","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\http\\index.js":"22","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\http\\deviceApi.js":"23","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\Pages.jsx":"24"},{"size":502,"mtime":1612388300867,"results":"25","hashOfConfig":"26"},{"size":821,"mtime":1612662994042,"results":"27","hashOfConfig":"26"},{"size":770,"mtime":1612387649583,"results":"28","hashOfConfig":"26"},{"size":232,"mtime":1612383267408,"results":"29","hashOfConfig":"26"},{"size":144,"mtime":1612384669294,"results":"30","hashOfConfig":"26"},{"size":1632,"mtime":1612482292800,"results":"31","hashOfConfig":"26"},{"size":1589,"mtime":1612663852398,"results":"32","hashOfConfig":"26"},{"size":3246,"mtime":1612624015458,"results":"33","hashOfConfig":"26"},{"size":830,"mtime":1612384587571,"results":"34","hashOfConfig":"26"},{"size":2958,"mtime":1612657573548,"results":"35","hashOfConfig":"26"},{"size":425,"mtime":1612622680810,"results":"36","hashOfConfig":"26"},{"size":2276,"mtime":1612663567073,"results":"37","hashOfConfig":"26"},{"size":1879,"mtime":1612626605683,"results":"38","hashOfConfig":"26"},{"size":851,"mtime":1612463790836,"results":"39","hashOfConfig":"26"},{"size":814,"mtime":1612464265083,"results":"40","hashOfConfig":"26"},{"size":496,"mtime":1612465377615,"results":"41","hashOfConfig":"26"},{"size":1358,"mtime":1612657229657,"results":"42","hashOfConfig":"26"},{"size":1554,"mtime":1612659187807,"results":"43","hashOfConfig":"26"},{"size":1559,"mtime":1612660058210,"results":"44","hashOfConfig":"26"},{"size":6841,"mtime":1612661752733,"results":"45","hashOfConfig":"26"},{"size":708,"mtime":1612626664307,"results":"46","hashOfConfig":"26"},{"size":459,"mtime":1612623216072,"results":"47","hashOfConfig":"26"},{"size":1000,"mtime":1612663588287,"results":"48","hashOfConfig":"26"},{"size":829,"mtime":1612663353674,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6lrztj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\index.js",[],["101","102"],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\App.js",["103"],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\AppRouter.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\utils\\consts.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Basket.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Admin.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Shop.jsx",["104","105"],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\Auth.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\routes\\appRoutes.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\pages\\DevicePage.jsx",["106"],"import React, {useState, useEffect} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport { FaStar } from 'react-icons/fa';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { fetchOneDevice } from '../http/deviceApi'\r\nimport {useParams} from 'react-router-dom'\r\nconst RACT_APP_API_URL = 'http://localhost:5000/'\r\n\r\nexport const DevicePage = () => {\r\n    // const device = {id: 1, name: '12 pro', price: 25000, rating: 5, img: \"https://i.citrus.ua/imgcache/size_500/uploads/shop/d/2/d21fc7834096ee92025677dcd757bb81.jpg\"}\r\n    // const description = [\r\n    //     {id: 1, title: 'Оперативная память', description: '5 гб'},\r\n    //     {id: 2, title: 'Камера', description: '12 мп'},\r\n    //     {id: 3, title: 'Процессор', description: 'snapDragon'}\r\n    // ]\r\n    const [device, setDevice] = useState({info: []});\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n       fetchOneDevice(params.id).then(data => setDevice(data))\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"pt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} src={RACT_APP_API_URL + device.img} />\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex justify-content-center align-items-center\"\r\n                        >\r\n                            <div className=\"rating\" style={{position: 'absolute', fontSize: 60, fontWeight: 700, color: '#333'}}>\r\n                                {device.rating}\r\n                            </div>\r\n                            <div className=\"icon\"><FaStar style={{fontSize: 260, color: '#cecece'}} /></div>\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"p-3 d-flex flex-column align-items-center justify-content-around\"\r\n                    >\r\n                        <h3>От: {device.price} руб.</h3>\r\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1 className=\"mb-3\">Характеристики</h1>\r\n                {device.info.map((info, index) => (\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? '#ececec': 'white', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\store\\UserStrore.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\store\\DeviceStore.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\NavBar.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\TypeBar.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\BrandBar.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\DeviceList.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\DeviceItem.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\modals\\CreateType.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\modals\\CreateBrand.jsx",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\modals\\CreateDevice.jsx",["107","108","109"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport {Context} from '../../index'\r\nimport { fetchTypes, fetchBrands, fetchDevices, createDevice } from '../../http/deviceApi'\r\nimport { observer } from 'mobx-react-lite';\r\n\r\n\r\nexport const CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [file, setFile] = useState(null);\r\n    // const [type, setType] = useState(null);\r\n    // const [brand, setBrand] = useState(null);\r\n    const [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n     }, []);\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeid', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        \r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                    <Dropdown.Toggle>{device.selectedType.name || 'Выберите тип'}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type => (\r\n                                <Dropdown.Item \r\n                                    onClick={() => device.setSelectedType(type)} \r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || 'Выберите бренд'}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand => (\r\n                                <Dropdown.Item \r\n                                    onClick={() => device.setSelectedBrand(brand)} \r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость устройства\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr />\r\n                    <Button \r\n                        onClick={addInfo}\r\n                        variant=\"outline-success\"\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i => (\r\n                        <Row className=\"mt-3\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={e => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={e => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введите описание\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button \r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant=\"outline-danger\"\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    ))}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button \r\n                    onClick={onHide}\r\n                    variant=\"outline-danger\"\r\n                >\r\n                    Close\r\n                </Button>\r\n                <Button \r\n                    onClick={() => {}}\r\n                    variant=\"outline-success\"\r\n                    onClick={addDevice}\r\n                >\r\n                    Добавить\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n})\r\n","D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\http\\userApi.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\http\\index.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\http\\deviceApi.js",[],"D:\\my_projects\\react\\ulbitv\\pern-shop\\client\\src\\components\\Pages.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":20,"column":6,"nodeType":"116","endLine":20,"endColumn":8,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":23,"column":8,"nodeType":"116","endLine":23,"endColumn":10,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"118","line":30,"column":8,"nodeType":"116","endLine":30,"endColumn":64,"suggestions":"120"},{"ruleId":"114","severity":1,"message":"121","line":25,"column":8,"nodeType":"116","endLine":25,"endColumn":10,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":9,"column":35,"nodeType":"125","messageId":"126","endLine":9,"endColumn":47},{"ruleId":"114","severity":1,"message":"118","line":25,"column":9,"nodeType":"116","endLine":25,"endColumn":11,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":159,"column":21,"nodeType":"130","endLine":159,"endColumn":40},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["133"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["134"],["135"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["136"],"no-unused-vars","'fetchDevices' is defined but never used.","Identifier","unusedVar",["137"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"140","fix":"146"},"Update the dependencies array to be: [user]",{"range":"147","text":"148"},"Update the dependencies array to be: [device]",{"range":"149","text":"150"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"151","text":"152"},"Update the dependencies array to be: [params.id]",{"range":"153","text":"154"},{"range":"155","text":"150"},[635,637],"[user]",[915,917],"[device]",[1155,1211],"[device.page, device.selectedType, device.selectedBrand, device]",[1127,1129],"[params.id]",[1022,1024]]